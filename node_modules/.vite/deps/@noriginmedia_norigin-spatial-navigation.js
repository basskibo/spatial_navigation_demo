import {
  require_Symbol,
  require_arrayMap,
  require_baseGetTag,
  require_baseUnary,
  require_isArguments,
  require_isArray,
  require_isArrayLike,
  require_isBuffer,
  require_isFunction,
  require_isIndex,
  require_isLength,
  require_isObject,
  require_isObjectLike,
  require_isTypedArray,
  require_keys,
  require_root
} from "./chunk-3HME3QUD.js";
import {
  require_react
} from "./chunk-CBG3MKAY.js";
import {
  __commonJS
} from "./chunk-EQCVQC35.js";

// node_modules/lodash/now.js
var require_now = __commonJS({
  "node_modules/lodash/now.js"(exports, module) {
    var root = require_root();
    var now = function() {
      return root.Date.now();
    };
    module.exports = now;
  }
});

// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = __commonJS({
  "node_modules/lodash/_trimmedEndIndex.js"(exports, module) {
    var reWhitespace = /\s/;
    function trimmedEndIndex(string) {
      var index = string.length;
      while (index-- && reWhitespace.test(string.charAt(index))) {
      }
      return index;
    }
    module.exports = trimmedEndIndex;
  }
});

// node_modules/lodash/_baseTrim.js
var require_baseTrim = __commonJS({
  "node_modules/lodash/_baseTrim.js"(exports, module) {
    var trimmedEndIndex = require_trimmedEndIndex();
    var reTrimStart = /^\s+/;
    function baseTrim(string) {
      return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
    }
    module.exports = baseTrim;
  }
});

// node_modules/lodash/isSymbol.js
var require_isSymbol = __commonJS({
  "node_modules/lodash/isSymbol.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var symbolTag = "[object Symbol]";
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
    }
    module.exports = isSymbol;
  }
});

// node_modules/lodash/toNumber.js
var require_toNumber = __commonJS({
  "node_modules/lodash/toNumber.js"(exports, module) {
    var baseTrim = require_baseTrim();
    var isObject = require_isObject();
    var isSymbol = require_isSymbol();
    var NAN = 0 / 0;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = toNumber;
  }
});

// node_modules/lodash/debounce.js
var require_debounce = __commonJS({
  "node_modules/lodash/debounce.js"(exports, module) {
    var isObject = require_isObject();
    var now = require_now();
    var toNumber = require_toNumber();
    var FUNC_ERROR_TEXT = "Expected a function";
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    function debounce(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
        return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    module.exports = debounce;
  }
});

// node_modules/lodash/_coreJsData.js
var require_coreJsData = __commonJS({
  "node_modules/lodash/_coreJsData.js"(exports, module) {
    var root = require_root();
    var coreJsData = root["__core-js_shared__"];
    module.exports = coreJsData;
  }
});

// node_modules/lodash/_isMasked.js
var require_isMasked = __commonJS({
  "node_modules/lodash/_isMasked.js"(exports, module) {
    var coreJsData = require_coreJsData();
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    module.exports = isMasked;
  }
});

// node_modules/lodash/_toSource.js
var require_toSource = __commonJS({
  "node_modules/lodash/_toSource.js"(exports, module) {
    var funcProto = Function.prototype;
    var funcToString = funcProto.toString;
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    module.exports = toSource;
  }
});

// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = __commonJS({
  "node_modules/lodash/_baseIsNative.js"(exports, module) {
    var isFunction = require_isFunction();
    var isMasked = require_isMasked();
    var isObject = require_isObject();
    var toSource = require_toSource();
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    module.exports = baseIsNative;
  }
});

// node_modules/lodash/_getValue.js
var require_getValue = __commonJS({
  "node_modules/lodash/_getValue.js"(exports, module) {
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    module.exports = getValue;
  }
});

// node_modules/lodash/_getNative.js
var require_getNative = __commonJS({
  "node_modules/lodash/_getNative.js"(exports, module) {
    var baseIsNative = require_baseIsNative();
    var getValue = require_getValue();
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    module.exports = getNative;
  }
});

// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = __commonJS({
  "node_modules/lodash/_nativeCreate.js"(exports, module) {
    var getNative = require_getNative();
    var nativeCreate = getNative(Object, "create");
    module.exports = nativeCreate;
  }
});

// node_modules/lodash/_hashClear.js
var require_hashClear = __commonJS({
  "node_modules/lodash/_hashClear.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    module.exports = hashClear;
  }
});

// node_modules/lodash/_hashDelete.js
var require_hashDelete = __commonJS({
  "node_modules/lodash/_hashDelete.js"(exports, module) {
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = hashDelete;
  }
});

// node_modules/lodash/_hashGet.js
var require_hashGet = __commonJS({
  "node_modules/lodash/_hashGet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    module.exports = hashGet;
  }
});

// node_modules/lodash/_hashHas.js
var require_hashHas = __commonJS({
  "node_modules/lodash/_hashHas.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    module.exports = hashHas;
  }
});

// node_modules/lodash/_hashSet.js
var require_hashSet = __commonJS({
  "node_modules/lodash/_hashSet.js"(exports, module) {
    var nativeCreate = require_nativeCreate();
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    module.exports = hashSet;
  }
});

// node_modules/lodash/_Hash.js
var require_Hash = __commonJS({
  "node_modules/lodash/_Hash.js"(exports, module) {
    var hashClear = require_hashClear();
    var hashDelete = require_hashDelete();
    var hashGet = require_hashGet();
    var hashHas = require_hashHas();
    var hashSet = require_hashSet();
    function Hash(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    module.exports = Hash;
  }
});

// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = __commonJS({
  "node_modules/lodash/_listCacheClear.js"(exports, module) {
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    module.exports = listCacheClear;
  }
});

// node_modules/lodash/eq.js
var require_eq = __commonJS({
  "node_modules/lodash/eq.js"(exports, module) {
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    module.exports = eq;
  }
});

// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = __commonJS({
  "node_modules/lodash/_assocIndexOf.js"(exports, module) {
    var eq = require_eq();
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    module.exports = assocIndexOf;
  }
});

// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = __commonJS({
  "node_modules/lodash/_listCacheDelete.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    var arrayProto = Array.prototype;
    var splice = arrayProto.splice;
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    module.exports = listCacheDelete;
  }
});

// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = __commonJS({
  "node_modules/lodash/_listCacheGet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    module.exports = listCacheGet;
  }
});

// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = __commonJS({
  "node_modules/lodash/_listCacheHas.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    module.exports = listCacheHas;
  }
});

// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = __commonJS({
  "node_modules/lodash/_listCacheSet.js"(exports, module) {
    var assocIndexOf = require_assocIndexOf();
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    module.exports = listCacheSet;
  }
});

// node_modules/lodash/_ListCache.js
var require_ListCache = __commonJS({
  "node_modules/lodash/_ListCache.js"(exports, module) {
    var listCacheClear = require_listCacheClear();
    var listCacheDelete = require_listCacheDelete();
    var listCacheGet = require_listCacheGet();
    var listCacheHas = require_listCacheHas();
    var listCacheSet = require_listCacheSet();
    function ListCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    module.exports = ListCache;
  }
});

// node_modules/lodash/_Map.js
var require_Map = __commonJS({
  "node_modules/lodash/_Map.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Map = getNative(root, "Map");
    module.exports = Map;
  }
});

// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = __commonJS({
  "node_modules/lodash/_mapCacheClear.js"(exports, module) {
    var Hash = require_Hash();
    var ListCache = require_ListCache();
    var Map = require_Map();
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map || ListCache)(),
        "string": new Hash()
      };
    }
    module.exports = mapCacheClear;
  }
});

// node_modules/lodash/_isKeyable.js
var require_isKeyable = __commonJS({
  "node_modules/lodash/_isKeyable.js"(exports, module) {
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    module.exports = isKeyable;
  }
});

// node_modules/lodash/_getMapData.js
var require_getMapData = __commonJS({
  "node_modules/lodash/_getMapData.js"(exports, module) {
    var isKeyable = require_isKeyable();
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    module.exports = getMapData;
  }
});

// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = __commonJS({
  "node_modules/lodash/_mapCacheDelete.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    module.exports = mapCacheDelete;
  }
});

// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = __commonJS({
  "node_modules/lodash/_mapCacheGet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    module.exports = mapCacheGet;
  }
});

// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = __commonJS({
  "node_modules/lodash/_mapCacheHas.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    module.exports = mapCacheHas;
  }
});

// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = __commonJS({
  "node_modules/lodash/_mapCacheSet.js"(exports, module) {
    var getMapData = require_getMapData();
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    module.exports = mapCacheSet;
  }
});

// node_modules/lodash/_MapCache.js
var require_MapCache = __commonJS({
  "node_modules/lodash/_MapCache.js"(exports, module) {
    var mapCacheClear = require_mapCacheClear();
    var mapCacheDelete = require_mapCacheDelete();
    var mapCacheGet = require_mapCacheGet();
    var mapCacheHas = require_mapCacheHas();
    var mapCacheSet = require_mapCacheSet();
    function MapCache(entries) {
      var index = -1, length = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    module.exports = MapCache;
  }
});

// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = __commonJS({
  "node_modules/lodash/_setCacheAdd.js"(exports, module) {
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    module.exports = setCacheAdd;
  }
});

// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = __commonJS({
  "node_modules/lodash/_setCacheHas.js"(exports, module) {
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    module.exports = setCacheHas;
  }
});

// node_modules/lodash/_SetCache.js
var require_SetCache = __commonJS({
  "node_modules/lodash/_SetCache.js"(exports, module) {
    var MapCache = require_MapCache();
    var setCacheAdd = require_setCacheAdd();
    var setCacheHas = require_setCacheHas();
    function SetCache(values) {
      var index = -1, length = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length) {
        this.add(values[index]);
      }
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    module.exports = SetCache;
  }
});

// node_modules/lodash/_baseFindIndex.js
var require_baseFindIndex = __commonJS({
  "node_modules/lodash/_baseFindIndex.js"(exports, module) {
    function baseFindIndex(array, predicate, fromIndex, fromRight) {
      var length = array.length, index = fromIndex + (fromRight ? 1 : -1);
      while (fromRight ? index-- : ++index < length) {
        if (predicate(array[index], index, array)) {
          return index;
        }
      }
      return -1;
    }
    module.exports = baseFindIndex;
  }
});

// node_modules/lodash/_baseIsNaN.js
var require_baseIsNaN = __commonJS({
  "node_modules/lodash/_baseIsNaN.js"(exports, module) {
    function baseIsNaN(value) {
      return value !== value;
    }
    module.exports = baseIsNaN;
  }
});

// node_modules/lodash/_strictIndexOf.js
var require_strictIndexOf = __commonJS({
  "node_modules/lodash/_strictIndexOf.js"(exports, module) {
    function strictIndexOf(array, value, fromIndex) {
      var index = fromIndex - 1, length = array.length;
      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }
    module.exports = strictIndexOf;
  }
});

// node_modules/lodash/_baseIndexOf.js
var require_baseIndexOf = __commonJS({
  "node_modules/lodash/_baseIndexOf.js"(exports, module) {
    var baseFindIndex = require_baseFindIndex();
    var baseIsNaN = require_baseIsNaN();
    var strictIndexOf = require_strictIndexOf();
    function baseIndexOf(array, value, fromIndex) {
      return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);
    }
    module.exports = baseIndexOf;
  }
});

// node_modules/lodash/_arrayIncludes.js
var require_arrayIncludes = __commonJS({
  "node_modules/lodash/_arrayIncludes.js"(exports, module) {
    var baseIndexOf = require_baseIndexOf();
    function arrayIncludes(array, value) {
      var length = array == null ? 0 : array.length;
      return !!length && baseIndexOf(array, value, 0) > -1;
    }
    module.exports = arrayIncludes;
  }
});

// node_modules/lodash/_arrayIncludesWith.js
var require_arrayIncludesWith = __commonJS({
  "node_modules/lodash/_arrayIncludesWith.js"(exports, module) {
    function arrayIncludesWith(array, value, comparator) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (comparator(value, array[index])) {
          return true;
        }
      }
      return false;
    }
    module.exports = arrayIncludesWith;
  }
});

// node_modules/lodash/_cacheHas.js
var require_cacheHas = __commonJS({
  "node_modules/lodash/_cacheHas.js"(exports, module) {
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    module.exports = cacheHas;
  }
});

// node_modules/lodash/_baseDifference.js
var require_baseDifference = __commonJS({
  "node_modules/lodash/_baseDifference.js"(exports, module) {
    var SetCache = require_SetCache();
    var arrayIncludes = require_arrayIncludes();
    var arrayIncludesWith = require_arrayIncludesWith();
    var arrayMap = require_arrayMap();
    var baseUnary = require_baseUnary();
    var cacheHas = require_cacheHas();
    var LARGE_ARRAY_SIZE = 200;
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1, includes = arrayIncludes, isCommon = true, length = array.length, result = [], valuesLength = values.length;
      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      } else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
        while (++index < length) {
          var value = array[index], computed = iteratee == null ? value : iteratee(value);
          value = comparator || value !== 0 ? value : 0;
          if (isCommon && computed === computed) {
            var valuesIndex = valuesLength;
            while (valuesIndex--) {
              if (values[valuesIndex] === computed) {
                continue outer;
              }
            }
            result.push(value);
          } else if (!includes(values, computed, comparator)) {
            result.push(value);
          }
        }
      return result;
    }
    module.exports = baseDifference;
  }
});

// node_modules/lodash/_arrayPush.js
var require_arrayPush = __commonJS({
  "node_modules/lodash/_arrayPush.js"(exports, module) {
    function arrayPush(array, values) {
      var index = -1, length = values.length, offset = array.length;
      while (++index < length) {
        array[offset + index] = values[index];
      }
      return array;
    }
    module.exports = arrayPush;
  }
});

// node_modules/lodash/_isFlattenable.js
var require_isFlattenable = __commonJS({
  "node_modules/lodash/_isFlattenable.js"(exports, module) {
    var Symbol = require_Symbol();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : void 0;
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
    }
    module.exports = isFlattenable;
  }
});

// node_modules/lodash/_baseFlatten.js
var require_baseFlatten = __commonJS({
  "node_modules/lodash/_baseFlatten.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isFlattenable = require_isFlattenable();
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1, length = array.length;
      predicate || (predicate = isFlattenable);
      result || (result = []);
      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }
    module.exports = baseFlatten;
  }
});

// node_modules/lodash/identity.js
var require_identity = __commonJS({
  "node_modules/lodash/identity.js"(exports, module) {
    function identity(value) {
      return value;
    }
    module.exports = identity;
  }
});

// node_modules/lodash/_apply.js
var require_apply = __commonJS({
  "node_modules/lodash/_apply.js"(exports, module) {
    function apply(func, thisArg, args) {
      switch (args.length) {
        case 0:
          return func.call(thisArg);
        case 1:
          return func.call(thisArg, args[0]);
        case 2:
          return func.call(thisArg, args[0], args[1]);
        case 3:
          return func.call(thisArg, args[0], args[1], args[2]);
      }
      return func.apply(thisArg, args);
    }
    module.exports = apply;
  }
});

// node_modules/lodash/_overRest.js
var require_overRest = __commonJS({
  "node_modules/lodash/_overRest.js"(exports, module) {
    var apply = require_apply();
    var nativeMax = Math.max;
    function overRest(func, start, transform) {
      start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
      return function() {
        var args = arguments, index = -1, length = nativeMax(args.length - start, 0), array = Array(length);
        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }
    module.exports = overRest;
  }
});

// node_modules/lodash/constant.js
var require_constant = __commonJS({
  "node_modules/lodash/constant.js"(exports, module) {
    function constant(value) {
      return function() {
        return value;
      };
    }
    module.exports = constant;
  }
});

// node_modules/lodash/_defineProperty.js
var require_defineProperty = __commonJS({
  "node_modules/lodash/_defineProperty.js"(exports, module) {
    var getNative = require_getNative();
    var defineProperty = function() {
      try {
        var func = getNative(Object, "defineProperty");
        func({}, "", {});
        return func;
      } catch (e) {
      }
    }();
    module.exports = defineProperty;
  }
});

// node_modules/lodash/_baseSetToString.js
var require_baseSetToString = __commonJS({
  "node_modules/lodash/_baseSetToString.js"(exports, module) {
    var constant = require_constant();
    var defineProperty = require_defineProperty();
    var identity = require_identity();
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, "toString", {
        "configurable": true,
        "enumerable": false,
        "value": constant(string),
        "writable": true
      });
    };
    module.exports = baseSetToString;
  }
});

// node_modules/lodash/_shortOut.js
var require_shortOut = __commonJS({
  "node_modules/lodash/_shortOut.js"(exports, module) {
    var HOT_COUNT = 800;
    var HOT_SPAN = 16;
    var nativeNow = Date.now;
    function shortOut(func) {
      var count = 0, lastCalled = 0;
      return function() {
        var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(void 0, arguments);
      };
    }
    module.exports = shortOut;
  }
});

// node_modules/lodash/_setToString.js
var require_setToString = __commonJS({
  "node_modules/lodash/_setToString.js"(exports, module) {
    var baseSetToString = require_baseSetToString();
    var shortOut = require_shortOut();
    var setToString = shortOut(baseSetToString);
    module.exports = setToString;
  }
});

// node_modules/lodash/_baseRest.js
var require_baseRest = __commonJS({
  "node_modules/lodash/_baseRest.js"(exports, module) {
    var identity = require_identity();
    var overRest = require_overRest();
    var setToString = require_setToString();
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + "");
    }
    module.exports = baseRest;
  }
});

// node_modules/lodash/isArrayLikeObject.js
var require_isArrayLikeObject = __commonJS({
  "node_modules/lodash/isArrayLikeObject.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    var isObjectLike = require_isObjectLike();
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }
    module.exports = isArrayLikeObject;
  }
});

// node_modules/lodash/difference.js
var require_difference = __commonJS({
  "node_modules/lodash/difference.js"(exports, module) {
    var baseDifference = require_baseDifference();
    var baseFlatten = require_baseFlatten();
    var baseRest = require_baseRest();
    var isArrayLikeObject = require_isArrayLikeObject();
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array) ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true)) : [];
    });
    module.exports = difference;
  }
});

// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = __commonJS({
  "node_modules/lodash/_arrayFilter.js"(exports, module) {
    function arrayFilter(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    module.exports = arrayFilter;
  }
});

// node_modules/lodash/_createBaseFor.js
var require_createBaseFor = __commonJS({
  "node_modules/lodash/_createBaseFor.js"(exports, module) {
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1, iterable = Object(object), props = keysFunc(object), length = props.length;
        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }
    module.exports = createBaseFor;
  }
});

// node_modules/lodash/_baseFor.js
var require_baseFor = __commonJS({
  "node_modules/lodash/_baseFor.js"(exports, module) {
    var createBaseFor = require_createBaseFor();
    var baseFor = createBaseFor();
    module.exports = baseFor;
  }
});

// node_modules/lodash/_baseForOwn.js
var require_baseForOwn = __commonJS({
  "node_modules/lodash/_baseForOwn.js"(exports, module) {
    var baseFor = require_baseFor();
    var keys = require_keys();
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }
    module.exports = baseForOwn;
  }
});

// node_modules/lodash/_createBaseEach.js
var require_createBaseEach = __commonJS({
  "node_modules/lodash/_createBaseEach.js"(exports, module) {
    var isArrayLike = require_isArrayLike();
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
        while (fromRight ? index-- : ++index < length) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }
    module.exports = createBaseEach;
  }
});

// node_modules/lodash/_baseEach.js
var require_baseEach = __commonJS({
  "node_modules/lodash/_baseEach.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var createBaseEach = require_createBaseEach();
    var baseEach = createBaseEach(baseForOwn);
    module.exports = baseEach;
  }
});

// node_modules/lodash/_baseFilter.js
var require_baseFilter = __commonJS({
  "node_modules/lodash/_baseFilter.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection2) {
        if (predicate(value, index, collection2)) {
          result.push(value);
        }
      });
      return result;
    }
    module.exports = baseFilter;
  }
});

// node_modules/lodash/_stackClear.js
var require_stackClear = __commonJS({
  "node_modules/lodash/_stackClear.js"(exports, module) {
    var ListCache = require_ListCache();
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    module.exports = stackClear;
  }
});

// node_modules/lodash/_stackDelete.js
var require_stackDelete = __commonJS({
  "node_modules/lodash/_stackDelete.js"(exports, module) {
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    module.exports = stackDelete;
  }
});

// node_modules/lodash/_stackGet.js
var require_stackGet = __commonJS({
  "node_modules/lodash/_stackGet.js"(exports, module) {
    function stackGet(key) {
      return this.__data__.get(key);
    }
    module.exports = stackGet;
  }
});

// node_modules/lodash/_stackHas.js
var require_stackHas = __commonJS({
  "node_modules/lodash/_stackHas.js"(exports, module) {
    function stackHas(key) {
      return this.__data__.has(key);
    }
    module.exports = stackHas;
  }
});

// node_modules/lodash/_stackSet.js
var require_stackSet = __commonJS({
  "node_modules/lodash/_stackSet.js"(exports, module) {
    var ListCache = require_ListCache();
    var Map = require_Map();
    var MapCache = require_MapCache();
    var LARGE_ARRAY_SIZE = 200;
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    module.exports = stackSet;
  }
});

// node_modules/lodash/_Stack.js
var require_Stack = __commonJS({
  "node_modules/lodash/_Stack.js"(exports, module) {
    var ListCache = require_ListCache();
    var stackClear = require_stackClear();
    var stackDelete = require_stackDelete();
    var stackGet = require_stackGet();
    var stackHas = require_stackHas();
    var stackSet = require_stackSet();
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    module.exports = Stack;
  }
});

// node_modules/lodash/_arraySome.js
var require_arraySome = __commonJS({
  "node_modules/lodash/_arraySome.js"(exports, module) {
    function arraySome(array, predicate) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    module.exports = arraySome;
  }
});

// node_modules/lodash/_equalArrays.js
var require_equalArrays = __commonJS({
  "node_modules/lodash/_equalArrays.js"(exports, module) {
    var SetCache = require_SetCache();
    var arraySome = require_arraySome();
    var cacheHas = require_cacheHas();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    module.exports = equalArrays;
  }
});

// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = __commonJS({
  "node_modules/lodash/_Uint8Array.js"(exports, module) {
    var root = require_root();
    var Uint8Array = root.Uint8Array;
    module.exports = Uint8Array;
  }
});

// node_modules/lodash/_mapToArray.js
var require_mapToArray = __commonJS({
  "node_modules/lodash/_mapToArray.js"(exports, module) {
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    module.exports = mapToArray;
  }
});

// node_modules/lodash/_setToArray.js
var require_setToArray = __commonJS({
  "node_modules/lodash/_setToArray.js"(exports, module) {
    function setToArray(set) {
      var index = -1, result = Array(set.size);
      set.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    module.exports = setToArray;
  }
});

// node_modules/lodash/_equalByTag.js
var require_equalByTag = __commonJS({
  "node_modules/lodash/_equalByTag.js"(exports, module) {
    var Symbol = require_Symbol();
    var Uint8Array = require_Uint8Array();
    var eq = require_eq();
    var equalArrays = require_equalArrays();
    var mapToArray = require_mapToArray();
    var setToArray = require_setToArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    module.exports = equalByTag;
  }
});

// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = __commonJS({
  "node_modules/lodash/_baseGetAllKeys.js"(exports, module) {
    var arrayPush = require_arrayPush();
    var isArray = require_isArray();
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    module.exports = baseGetAllKeys;
  }
});

// node_modules/lodash/stubArray.js
var require_stubArray = __commonJS({
  "node_modules/lodash/stubArray.js"(exports, module) {
    function stubArray() {
      return [];
    }
    module.exports = stubArray;
  }
});

// node_modules/lodash/_getSymbols.js
var require_getSymbols = __commonJS({
  "node_modules/lodash/_getSymbols.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var stubArray = require_stubArray();
    var objectProto = Object.prototype;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    module.exports = getSymbols;
  }
});

// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = __commonJS({
  "node_modules/lodash/_getAllKeys.js"(exports, module) {
    var baseGetAllKeys = require_baseGetAllKeys();
    var getSymbols = require_getSymbols();
    var keys = require_keys();
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }
    module.exports = getAllKeys;
  }
});

// node_modules/lodash/_equalObjects.js
var require_equalObjects = __commonJS({
  "node_modules/lodash/_equalObjects.js"(exports, module) {
    var getAllKeys = require_getAllKeys();
    var COMPARE_PARTIAL_FLAG = 1;
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    module.exports = equalObjects;
  }
});

// node_modules/lodash/_DataView.js
var require_DataView = __commonJS({
  "node_modules/lodash/_DataView.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var DataView = getNative(root, "DataView");
    module.exports = DataView;
  }
});

// node_modules/lodash/_Promise.js
var require_Promise = __commonJS({
  "node_modules/lodash/_Promise.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Promise2 = getNative(root, "Promise");
    module.exports = Promise2;
  }
});

// node_modules/lodash/_Set.js
var require_Set = __commonJS({
  "node_modules/lodash/_Set.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var Set = getNative(root, "Set");
    module.exports = Set;
  }
});

// node_modules/lodash/_WeakMap.js
var require_WeakMap = __commonJS({
  "node_modules/lodash/_WeakMap.js"(exports, module) {
    var getNative = require_getNative();
    var root = require_root();
    var WeakMap = getNative(root, "WeakMap");
    module.exports = WeakMap;
  }
});

// node_modules/lodash/_getTag.js
var require_getTag = __commonJS({
  "node_modules/lodash/_getTag.js"(exports, module) {
    var DataView = require_DataView();
    var Map = require_Map();
    var Promise2 = require_Promise();
    var Set = require_Set();
    var WeakMap = require_WeakMap();
    var baseGetTag = require_baseGetTag();
    var toSource = require_toSource();
    var mapTag = "[object Map]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var setTag = "[object Set]";
    var weakMapTag = "[object WeakMap]";
    var dataViewTag = "[object DataView]";
    var dataViewCtorString = toSource(DataView);
    var mapCtorString = toSource(Map);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set);
    var weakMapCtorString = toSource(WeakMap);
    var getTag = baseGetTag;
    if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    module.exports = getTag;
  }
});

// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = __commonJS({
  "node_modules/lodash/_baseIsEqualDeep.js"(exports, module) {
    var Stack = require_Stack();
    var equalArrays = require_equalArrays();
    var equalByTag = require_equalByTag();
    var equalObjects = require_equalObjects();
    var getTag = require_getTag();
    var isArray = require_isArray();
    var isBuffer = require_isBuffer();
    var isTypedArray = require_isTypedArray();
    var COMPARE_PARTIAL_FLAG = 1;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var objectTag = "[object Object]";
    var objectProto = Object.prototype;
    var hasOwnProperty = objectProto.hasOwnProperty;
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    module.exports = baseIsEqualDeep;
  }
});

// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = __commonJS({
  "node_modules/lodash/_baseIsEqual.js"(exports, module) {
    var baseIsEqualDeep = require_baseIsEqualDeep();
    var isObjectLike = require_isObjectLike();
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    module.exports = baseIsEqual;
  }
});

// node_modules/lodash/_baseIsMatch.js
var require_baseIsMatch = __commonJS({
  "node_modules/lodash/_baseIsMatch.js"(exports, module) {
    var Stack = require_Stack();
    var baseIsEqual = require_baseIsEqual();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length, length = index, noCustomizer = !customizer;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0], objValue = object[key], srcValue = data[1];
        if (noCustomizer && data[2]) {
          if (objValue === void 0 && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack();
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === void 0 ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {
            return false;
          }
        }
      }
      return true;
    }
    module.exports = baseIsMatch;
  }
});

// node_modules/lodash/_isStrictComparable.js
var require_isStrictComparable = __commonJS({
  "node_modules/lodash/_isStrictComparable.js"(exports, module) {
    var isObject = require_isObject();
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }
    module.exports = isStrictComparable;
  }
});

// node_modules/lodash/_getMatchData.js
var require_getMatchData = __commonJS({
  "node_modules/lodash/_getMatchData.js"(exports, module) {
    var isStrictComparable = require_isStrictComparable();
    var keys = require_keys();
    function getMatchData(object) {
      var result = keys(object), length = result.length;
      while (length--) {
        var key = result[length], value = object[key];
        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }
    module.exports = getMatchData;
  }
});

// node_modules/lodash/_matchesStrictComparable.js
var require_matchesStrictComparable = __commonJS({
  "node_modules/lodash/_matchesStrictComparable.js"(exports, module) {
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue && (srcValue !== void 0 || key in Object(object));
      };
    }
    module.exports = matchesStrictComparable;
  }
});

// node_modules/lodash/_baseMatches.js
var require_baseMatches = __commonJS({
  "node_modules/lodash/_baseMatches.js"(exports, module) {
    var baseIsMatch = require_baseIsMatch();
    var getMatchData = require_getMatchData();
    var matchesStrictComparable = require_matchesStrictComparable();
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }
    module.exports = baseMatches;
  }
});

// node_modules/lodash/_isKey.js
var require_isKey = __commonJS({
  "node_modules/lodash/_isKey.js"(exports, module) {
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
    var reIsPlainProp = /^\w*$/;
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);
    }
    module.exports = isKey;
  }
});

// node_modules/lodash/memoize.js
var require_memoize = __commonJS({
  "node_modules/lodash/memoize.js"(exports, module) {
    var MapCache = require_MapCache();
    var FUNC_ERROR_TEXT = "Expected a function";
    function memoize(func, resolver) {
      if (typeof func != "function" || resolver != null && typeof resolver != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver ? resolver.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache)();
      return memoized;
    }
    memoize.Cache = MapCache;
    module.exports = memoize;
  }
});

// node_modules/lodash/_memoizeCapped.js
var require_memoizeCapped = __commonJS({
  "node_modules/lodash/_memoizeCapped.js"(exports, module) {
    var memoize = require_memoize();
    var MAX_MEMOIZE_SIZE = 500;
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });
      var cache = result.cache;
      return result;
    }
    module.exports = memoizeCapped;
  }
});

// node_modules/lodash/_stringToPath.js
var require_stringToPath = __commonJS({
  "node_modules/lodash/_stringToPath.js"(exports, module) {
    var memoizeCapped = require_memoizeCapped();
    var rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
    var reEscapeChar = /\\(\\)?/g;
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46) {
        result.push("");
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, "$1") : number || match);
      });
      return result;
    });
    module.exports = stringToPath;
  }
});

// node_modules/lodash/_baseToString.js
var require_baseToString = __commonJS({
  "node_modules/lodash/_baseToString.js"(exports, module) {
    var Symbol = require_Symbol();
    var arrayMap = require_arrayMap();
    var isArray = require_isArray();
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    var symbolProto = Symbol ? Symbol.prototype : void 0;
    var symbolToString = symbolProto ? symbolProto.toString : void 0;
    function baseToString(value) {
      if (typeof value == "string") {
        return value;
      }
      if (isArray(value)) {
        return arrayMap(value, baseToString) + "";
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : "";
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = baseToString;
  }
});

// node_modules/lodash/toString.js
var require_toString = __commonJS({
  "node_modules/lodash/toString.js"(exports, module) {
    var baseToString = require_baseToString();
    function toString(value) {
      return value == null ? "" : baseToString(value);
    }
    module.exports = toString;
  }
});

// node_modules/lodash/_castPath.js
var require_castPath = __commonJS({
  "node_modules/lodash/_castPath.js"(exports, module) {
    var isArray = require_isArray();
    var isKey = require_isKey();
    var stringToPath = require_stringToPath();
    var toString = require_toString();
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }
    module.exports = castPath;
  }
});

// node_modules/lodash/_toKey.js
var require_toKey = __commonJS({
  "node_modules/lodash/_toKey.js"(exports, module) {
    var isSymbol = require_isSymbol();
    var INFINITY = 1 / 0;
    function toKey(value) {
      if (typeof value == "string" || isSymbol(value)) {
        return value;
      }
      var result = value + "";
      return result == "0" && 1 / value == -INFINITY ? "-0" : result;
    }
    module.exports = toKey;
  }
});

// node_modules/lodash/_baseGet.js
var require_baseGet = __commonJS({
  "node_modules/lodash/_baseGet.js"(exports, module) {
    var castPath = require_castPath();
    var toKey = require_toKey();
    function baseGet(object, path) {
      path = castPath(path, object);
      var index = 0, length = path.length;
      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return index && index == length ? object : void 0;
    }
    module.exports = baseGet;
  }
});

// node_modules/lodash/get.js
var require_get = __commonJS({
  "node_modules/lodash/get.js"(exports, module) {
    var baseGet = require_baseGet();
    function get(object, path, defaultValue) {
      var result = object == null ? void 0 : baseGet(object, path);
      return result === void 0 ? defaultValue : result;
    }
    module.exports = get;
  }
});

// node_modules/lodash/_baseHasIn.js
var require_baseHasIn = __commonJS({
  "node_modules/lodash/_baseHasIn.js"(exports, module) {
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }
    module.exports = baseHasIn;
  }
});

// node_modules/lodash/_hasPath.js
var require_hasPath = __commonJS({
  "node_modules/lodash/_hasPath.js"(exports, module) {
    var castPath = require_castPath();
    var isArguments = require_isArguments();
    var isArray = require_isArray();
    var isIndex = require_isIndex();
    var isLength = require_isLength();
    var toKey = require_toKey();
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);
      var index = -1, length = path.length, result = false;
      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));
    }
    module.exports = hasPath;
  }
});

// node_modules/lodash/hasIn.js
var require_hasIn = __commonJS({
  "node_modules/lodash/hasIn.js"(exports, module) {
    var baseHasIn = require_baseHasIn();
    var hasPath = require_hasPath();
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }
    module.exports = hasIn;
  }
});

// node_modules/lodash/_baseMatchesProperty.js
var require_baseMatchesProperty = __commonJS({
  "node_modules/lodash/_baseMatchesProperty.js"(exports, module) {
    var baseIsEqual = require_baseIsEqual();
    var get = require_get();
    var hasIn = require_hasIn();
    var isKey = require_isKey();
    var isStrictComparable = require_isStrictComparable();
    var matchesStrictComparable = require_matchesStrictComparable();
    var toKey = require_toKey();
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return objValue === void 0 && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }
    module.exports = baseMatchesProperty;
  }
});

// node_modules/lodash/_baseProperty.js
var require_baseProperty = __commonJS({
  "node_modules/lodash/_baseProperty.js"(exports, module) {
    function baseProperty(key) {
      return function(object) {
        return object == null ? void 0 : object[key];
      };
    }
    module.exports = baseProperty;
  }
});

// node_modules/lodash/_basePropertyDeep.js
var require_basePropertyDeep = __commonJS({
  "node_modules/lodash/_basePropertyDeep.js"(exports, module) {
    var baseGet = require_baseGet();
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }
    module.exports = basePropertyDeep;
  }
});

// node_modules/lodash/property.js
var require_property = __commonJS({
  "node_modules/lodash/property.js"(exports, module) {
    var baseProperty = require_baseProperty();
    var basePropertyDeep = require_basePropertyDeep();
    var isKey = require_isKey();
    var toKey = require_toKey();
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }
    module.exports = property;
  }
});

// node_modules/lodash/_baseIteratee.js
var require_baseIteratee = __commonJS({
  "node_modules/lodash/_baseIteratee.js"(exports, module) {
    var baseMatches = require_baseMatches();
    var baseMatchesProperty = require_baseMatchesProperty();
    var identity = require_identity();
    var isArray = require_isArray();
    var property = require_property();
    function baseIteratee(value) {
      if (typeof value == "function") {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == "object") {
        return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
      }
      return property(value);
    }
    module.exports = baseIteratee;
  }
});

// node_modules/lodash/filter.js
var require_filter = __commonJS({
  "node_modules/lodash/filter.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var baseFilter = require_baseFilter();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = filter;
  }
});

// node_modules/lodash/_baseFindKey.js
var require_baseFindKey = __commonJS({
  "node_modules/lodash/_baseFindKey.js"(exports, module) {
    function baseFindKey(collection, predicate, eachFunc) {
      var result;
      eachFunc(collection, function(value, key, collection2) {
        if (predicate(value, key, collection2)) {
          result = key;
          return false;
        }
      });
      return result;
    }
    module.exports = baseFindKey;
  }
});

// node_modules/lodash/findKey.js
var require_findKey = __commonJS({
  "node_modules/lodash/findKey.js"(exports, module) {
    var baseFindKey = require_baseFindKey();
    var baseForOwn = require_baseForOwn();
    var baseIteratee = require_baseIteratee();
    function findKey(object, predicate) {
      return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);
    }
    module.exports = findKey;
  }
});

// node_modules/lodash/head.js
var require_head = __commonJS({
  "node_modules/lodash/head.js"(exports, module) {
    function head(array) {
      return array && array.length ? array[0] : void 0;
    }
    module.exports = head;
  }
});

// node_modules/lodash/first.js
var require_first = __commonJS({
  "node_modules/lodash/first.js"(exports, module) {
    module.exports = require_head();
  }
});

// node_modules/lodash/_arrayEach.js
var require_arrayEach = __commonJS({
  "node_modules/lodash/_arrayEach.js"(exports, module) {
    function arrayEach(array, iteratee) {
      var index = -1, length = array == null ? 0 : array.length;
      while (++index < length) {
        if (iteratee(array[index], index, array) === false) {
          break;
        }
      }
      return array;
    }
    module.exports = arrayEach;
  }
});

// node_modules/lodash/_castFunction.js
var require_castFunction = __commonJS({
  "node_modules/lodash/_castFunction.js"(exports, module) {
    var identity = require_identity();
    function castFunction(value) {
      return typeof value == "function" ? value : identity;
    }
    module.exports = castFunction;
  }
});

// node_modules/lodash/forEach.js
var require_forEach = __commonJS({
  "node_modules/lodash/forEach.js"(exports, module) {
    var arrayEach = require_arrayEach();
    var baseEach = require_baseEach();
    var castFunction = require_castFunction();
    var isArray = require_isArray();
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, castFunction(iteratee));
    }
    module.exports = forEach;
  }
});

// node_modules/lodash/forOwn.js
var require_forOwn = __commonJS({
  "node_modules/lodash/forOwn.js"(exports, module) {
    var baseForOwn = require_baseForOwn();
    var castFunction = require_castFunction();
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, castFunction(iteratee));
    }
    module.exports = forOwn;
  }
});

// node_modules/lodash/noop.js
var require_noop = __commonJS({
  "node_modules/lodash/noop.js"(exports, module) {
    function noop() {
    }
    module.exports = noop;
  }
});

// node_modules/lodash/_baseMap.js
var require_baseMap = __commonJS({
  "node_modules/lodash/_baseMap.js"(exports, module) {
    var baseEach = require_baseEach();
    var isArrayLike = require_isArrayLike();
    function baseMap(collection, iteratee) {
      var index = -1, result = isArrayLike(collection) ? Array(collection.length) : [];
      baseEach(collection, function(value, key, collection2) {
        result[++index] = iteratee(value, key, collection2);
      });
      return result;
    }
    module.exports = baseMap;
  }
});

// node_modules/lodash/_baseSortBy.js
var require_baseSortBy = __commonJS({
  "node_modules/lodash/_baseSortBy.js"(exports, module) {
    function baseSortBy(array, comparer) {
      var length = array.length;
      array.sort(comparer);
      while (length--) {
        array[length] = array[length].value;
      }
      return array;
    }
    module.exports = baseSortBy;
  }
});

// node_modules/lodash/_compareAscending.js
var require_compareAscending = __commonJS({
  "node_modules/lodash/_compareAscending.js"(exports, module) {
    var isSymbol = require_isSymbol();
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== void 0, valIsNull = value === null, valIsReflexive = value === value, valIsSymbol = isSymbol(value);
        var othIsDefined = other !== void 0, othIsNull = other === null, othIsReflexive = other === other, othIsSymbol = isSymbol(other);
        if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {
          return 1;
        }
        if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }
    module.exports = compareAscending;
  }
});

// node_modules/lodash/_compareMultiple.js
var require_compareMultiple = __commonJS({
  "node_modules/lodash/_compareMultiple.js"(exports, module) {
    var compareAscending = require_compareAscending();
    function compareMultiple(object, other, orders) {
      var index = -1, objCriteria = object.criteria, othCriteria = other.criteria, length = objCriteria.length, ordersLength = orders.length;
      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == "desc" ? -1 : 1);
        }
      }
      return object.index - other.index;
    }
    module.exports = compareMultiple;
  }
});

// node_modules/lodash/_baseOrderBy.js
var require_baseOrderBy = __commonJS({
  "node_modules/lodash/_baseOrderBy.js"(exports, module) {
    var arrayMap = require_arrayMap();
    var baseGet = require_baseGet();
    var baseIteratee = require_baseIteratee();
    var baseMap = require_baseMap();
    var baseSortBy = require_baseSortBy();
    var baseUnary = require_baseUnary();
    var compareMultiple = require_compareMultiple();
    var identity = require_identity();
    var isArray = require_isArray();
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            };
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }
      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(baseIteratee));
      var result = baseMap(collection, function(value, key, collection2) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { "criteria": criteria, "index": ++index, "value": value };
      });
      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }
    module.exports = baseOrderBy;
  }
});

// node_modules/lodash/_isIterateeCall.js
var require_isIterateeCall = __commonJS({
  "node_modules/lodash/_isIterateeCall.js"(exports, module) {
    var eq = require_eq();
    var isArrayLike = require_isArrayLike();
    var isIndex = require_isIndex();
    var isObject = require_isObject();
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == "number" ? isArrayLike(object) && isIndex(index, object.length) : type == "string" && index in object) {
        return eq(object[index], value);
      }
      return false;
    }
    module.exports = isIterateeCall;
  }
});

// node_modules/lodash/sortBy.js
var require_sortBy = __commonJS({
  "node_modules/lodash/sortBy.js"(exports, module) {
    var baseFlatten = require_baseFlatten();
    var baseOrderBy = require_baseOrderBy();
    var baseRest = require_baseRest();
    var isIterateeCall = require_isIterateeCall();
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });
    module.exports = sortBy;
  }
});

// node_modules/lodash/throttle.js
var require_throttle = __commonJS({
  "node_modules/lodash/throttle.js"(exports, module) {
    var debounce = require_debounce();
    var isObject = require_isObject();
    var FUNC_ERROR_TEXT = "Expected a function";
    function throttle(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    module.exports = throttle;
  }
});

// node_modules/lodash/uniqueId.js
var require_uniqueId = __commonJS({
  "node_modules/lodash/uniqueId.js"(exports, module) {
    var toString = require_toString();
    var idCounter = 0;
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }
    module.exports = uniqueId;
  }
});

// node_modules/@noriginmedia/norigin-spatial-navigation/dist/index.js
var require_dist = __commonJS({
  "node_modules/@noriginmedia/norigin-spatial-navigation/dist/index.js"(exports, module) {
    !function(e, t) {
      if ("object" == typeof exports && "object" == typeof module) module.exports = t(require_debounce(), require_difference(), require_filter(), require_findKey(), require_first(), require_forEach(), require_forOwn(), require_noop(), require_sortBy(), require_throttle(), require_uniqueId(), require_react());
      else if ("function" == typeof define && define.amd) define(["lodash/debounce", "lodash/difference", "lodash/filter", "lodash/findKey", "lodash/first", "lodash/forEach", "lodash/forOwn", "lodash/noop", "lodash/sortBy", "lodash/throttle", "lodash/uniqueId", "react"], t);
      else {
        var o = "object" == typeof exports ? t(require_debounce(), require_difference(), require_filter(), require_findKey(), require_first(), require_forEach(), require_forOwn(), require_noop(), require_sortBy(), require_throttle(), require_uniqueId(), require_react()) : t(e["lodash/debounce"], e["lodash/difference"], e["lodash/filter"], e["lodash/findKey"], e["lodash/first"], e["lodash/forEach"], e["lodash/forOwn"], e["lodash/noop"], e["lodash/sortBy"], e["lodash/throttle"], e["lodash/uniqueId"], e.react);
        for (var s in o) ("object" == typeof exports ? exports : e)[s] = o[s];
      }
    }(exports, function(e, t, o, s, i, n, r, a, u, c, l, d) {
      return function() {
        "use strict";
        var h = { 654: function(e2, t2, o2) {
          var s2, i2 = this && this.__assign || function() {
            return i2 = Object.assign || function(e3) {
              for (var t3, o3 = 1, s3 = arguments.length; o3 < s3; o3++) for (var i3 in t3 = arguments[o3]) Object.prototype.hasOwnProperty.call(t3, i3) && (e3[i3] = t3[i3]);
              return e3;
            }, i2.apply(this, arguments);
          }, n2 = this && this.__createBinding || (Object.create ? function(e3, t3, o3, s3) {
            void 0 === s3 && (s3 = o3);
            var i3 = Object.getOwnPropertyDescriptor(t3, o3);
            i3 && !("get" in i3 ? !t3.__esModule : i3.writable || i3.configurable) || (i3 = { enumerable: true, get: function() {
              return t3[o3];
            } }), Object.defineProperty(e3, s3, i3);
          } : function(e3, t3, o3, s3) {
            void 0 === s3 && (s3 = o3), e3[s3] = t3[o3];
          }), r2 = this && this.__setModuleDefault || (Object.create ? function(e3, t3) {
            Object.defineProperty(e3, "default", { enumerable: true, value: t3 });
          } : function(e3, t3) {
            e3.default = t3;
          }), a2 = this && this.__importStar || function(e3) {
            if (e3 && e3.__esModule) return e3;
            var t3 = {};
            if (null != e3) for (var o3 in e3) "default" !== o3 && Object.prototype.hasOwnProperty.call(e3, o3) && n2(t3, e3, o3);
            return r2(t3, e3), t3;
          }, u2 = this && this.__spreadArray || function(e3, t3, o3) {
            if (o3 || 2 === arguments.length) for (var s3, i3 = 0, n3 = t3.length; i3 < n3; i3++) !s3 && i3 in t3 || (s3 || (s3 = Array.prototype.slice.call(t3, 0, i3)), s3[i3] = t3[i3]);
            return e3.concat(s3 || Array.prototype.slice.call(t3));
          }, c2 = this && this.__importDefault || function(e3) {
            return e3 && e3.__esModule ? e3 : { default: e3 };
          };
          Object.defineProperty(t2, "__esModule", { value: true }), t2.updateRtl = t2.doesFocusableExist = t2.getCurrentFocusKey = t2.updateAllLayouts = t2.resume = t2.pause = t2.navigateByDirection = t2.setFocus = t2.setKeyMap = t2.destroy = t2.setThrottle = t2.init = t2.SpatialNavigation = t2.ROOT_FOCUS_KEY = void 0;
          var l2 = c2(o2(150)), d2 = c2(o2(117)), h2 = c2(o2(747)), f2 = c2(o2(23)), p = c2(o2(842)), y = c2(o2(682)), v = c2(o2(784)), g = c2(o2(432)), b = c2(o2(67)), F = c2(o2(35)), C = c2(o2(119)), m = a2(o2(964)), K = "left", w = "right", x = "up", E = "down", D = "enter", L = ((s2 = {}).left = [37, "ArrowLeft"], s2.up = [38, "ArrowUp"], s2.right = [39, "ArrowRight"], s2.down = [40, "ArrowDown"], s2.enter = [13, "Enter"], s2);
          t2.ROOT_FOCUS_KEY = "SN:ROOT";
          var M = ["#0FF", "#FF0", "#F0F"], R = { leading: true, trailing: false }, N = function() {
            function e3() {
              this.focusableComponents = {}, this.focusKey = null, this.parentsHavingFocusedChild = [], this.domNodeFocusOptions = {}, this.enabled = false, this.nativeMode = false, this.throttle = 0, this.throttleKeypresses = false, this.useGetBoundingClientRect = false, this.shouldFocusDOMNode = false, this.shouldUseNativeEvents = false, this.writingDirection = C.default.LTR, this.pressedKeys = {}, this.paused = false, this.keyDownEventListener = null, this.keyUpEventListener = null, this.keyMap = L, this.pause = this.pause.bind(this), this.resume = this.resume.bind(this), this.setFocus = this.setFocus.bind(this), this.updateAllLayouts = this.updateAllLayouts.bind(this), this.navigateByDirection = this.navigateByDirection.bind(this), this.init = this.init.bind(this), this.setThrottle = this.setThrottle.bind(this), this.destroy = this.destroy.bind(this), this.setKeyMap = this.setKeyMap.bind(this), this.getCurrentFocusKey = this.getCurrentFocusKey.bind(this), this.doesFocusableExist = this.doesFocusableExist.bind(this), this.updateRtl = this.updateRtl.bind(this), this.setFocusDebounced = (0, l2.default)(this.setFocus, 300, { leading: false, trailing: true }), this.debug = false, this.visualDebugger = null, this.logIndex = 0, this.distanceCalculationMethod = "corners";
            }
            return e3.getCutoffCoordinate = function(e4, t3, o3, s3, i3) {
              var n3 = e4 ? s3.top : i3 === C.default.LTR ? s3.left : s3.right, r3 = e4 ? s3.bottom : i3 === C.default.LTR ? s3.right : s3.left;
              return t3 ? o3 ? n3 : r3 : o3 ? r3 : n3;
            }, e3.getRefCorners = function(e4, t3, o3) {
              var s3 = { a: { x: 0, y: 0 }, b: { x: 0, y: 0 } };
              switch (e4) {
                case x:
                  var i3 = t3 ? o3.bottom : o3.top;
                  s3.a = { x: o3.left, y: i3 }, s3.b = { x: o3.right, y: i3 };
                  break;
                case E:
                  i3 = t3 ? o3.top : o3.bottom, s3.a = { x: o3.left, y: i3 }, s3.b = { x: o3.right, y: i3 };
                  break;
                case K:
                  var n3 = t3 ? o3.right : o3.left;
                  s3.a = { x: n3, y: o3.top }, s3.b = { x: n3, y: o3.bottom };
                  break;
                case w:
                  n3 = t3 ? o3.left : o3.right, s3.a = { x: n3, y: o3.top }, s3.b = { x: n3, y: o3.bottom };
              }
              return s3;
            }, e3.isAdjacentSlice = function(e4, t3, o3) {
              var s3 = e4.a, i3 = e4.b, n3 = t3.a, r3 = t3.b, a3 = o3 ? "x" : "y", u3 = s3[a3], c3 = i3[a3], l3 = n3[a3], d3 = r3[a3], h3 = 0.2 * (c3 - u3);
              return Math.max(0, Math.min(c3, d3) - Math.max(u3, l3)) >= h3;
            }, e3.getPrimaryAxisDistance = function(e4, t3, o3) {
              var s3 = e4.a, i3 = t3.a, n3 = o3 ? "y" : "x";
              return Math.abs(i3[n3] - s3[n3]);
            }, e3.getSecondaryAxisDistance = function(e4, t3, o3, s3, i3) {
              if (i3) return i3(e4, t3, o3, s3);
              var n3 = e4.a, r3 = e4.b, a3 = t3.a, u3 = t3.b, c3 = o3 ? "x" : "y", l3 = n3[c3], d3 = r3[c3], h3 = a3[c3], f3 = u3[c3];
              if ("center" === s3) {
                var p2 = (l3 + d3) / 2, y2 = (h3 + f3) / 2;
                return Math.abs(p2 - y2);
              }
              if ("edges" === s3) {
                var v2 = Math.min(l3, d3), g2 = Math.min(h3, f3), b2 = Math.max(l3, d3), F2 = Math.max(h3, f3), C2 = Math.abs(v2 - g2), m2 = Math.abs(b2 - F2);
                return Math.min(C2, m2);
              }
              var K2 = [Math.abs(h3 - l3), Math.abs(h3 - d3), Math.abs(f3 - l3), Math.abs(f3 - d3)];
              return Math.min.apply(Math, K2);
            }, e3.prototype.sortSiblingsByPriority = function(t3, o3, s3, i3) {
              var n3 = this, r3 = s3 === E || s3 === x, a3 = e3.getRefCorners(s3, false, o3);
              return (0, g.default)(t3, function(t4) {
                var o4 = e3.getRefCorners(s3, true, t4.layout), u3 = e3.isAdjacentSlice(a3, o4, r3), c3 = u3 ? e3.getPrimaryAxisDistance : e3.getSecondaryAxisDistance, l3 = u3 ? e3.getSecondaryAxisDistance : e3.getPrimaryAxisDistance, d3 = c3(a3, o4, r3, n3.distanceCalculationMethod, n3.customDistanceCalculationFunction), h3 = l3(a3, o4, r3, n3.distanceCalculationMethod, n3.customDistanceCalculationFunction), f3 = 5 * d3 + h3, p2 = (f3 + 1) / (u3 ? 5 : 1);
                return n3.log("smartNavigate", "distance (primary, secondary, total weighted) for ".concat(t4.focusKey, " relative to ").concat(i3, " is"), d3, h3, f3), n3.log("smartNavigate", "priority for ".concat(t4.focusKey, " relative to ").concat(i3, " is"), p2), n3.visualDebugger && (n3.visualDebugger.drawPoint(o4.a.x, o4.a.y, "yellow", 6), n3.visualDebugger.drawPoint(o4.b.x, o4.b.y, "yellow", 6)), p2;
              });
            }, e3.prototype.init = function(e4) {
              var t3 = this, o3 = void 0 === e4 ? {} : e4, s3 = o3.debug, i3 = void 0 !== s3 && s3, n3 = o3.visualDebug, r3 = void 0 !== n3 && n3, a3 = o3.nativeMode, u3 = void 0 !== a3 && a3, c3 = o3.throttle, l3 = void 0 === c3 ? 0 : c3, d3 = o3.throttleKeypresses, h3 = void 0 !== d3 && d3, f3 = o3.useGetBoundingClientRect, p2 = void 0 !== f3 && f3, y2 = o3.shouldFocusDOMNode, g2 = void 0 !== y2 && y2, b2 = o3.domNodeFocusOptions, m2 = void 0 === b2 ? {} : b2, K2 = o3.shouldUseNativeEvents, w2 = void 0 !== K2 && K2, x2 = o3.rtl, E2 = void 0 !== x2 && x2, D2 = o3.distanceCalculationMethod, L2 = void 0 === D2 ? "corners" : D2, M2 = o3.customDistanceCalculationFunction, R2 = void 0 === M2 ? void 0 : M2;
              if (!this.enabled && (this.domNodeFocusOptions = m2, this.enabled = true, this.nativeMode = u3, this.throttleKeypresses = h3, this.useGetBoundingClientRect = p2, this.shouldFocusDOMNode = g2 && !u3, this.shouldUseNativeEvents = w2, this.writingDirection = E2 ? C.default.RTL : C.default.LTR, this.distanceCalculationMethod = L2, this.customDistanceCalculationFunction = R2, this.debug = i3, !this.nativeMode && (Number.isInteger(l3) && l3 > 0 && (this.throttle = l3), this.bindEventHandlers(), r3))) {
                this.visualDebugger = new F.default(this.writingDirection);
                var N2 = function() {
                  requestAnimationFrame(function() {
                    t3.visualDebugger.clearLayouts(), (0, v.default)(t3.focusableComponents, function(e5, o4) {
                      t3.visualDebugger.drawLayout(e5.layout, o4, e5.parentFocusKey);
                    }), N2();
                  });
                };
                N2();
              }
            }, e3.prototype.setThrottle = function(e4) {
              var t3 = void 0 === e4 ? {} : e4, o3 = t3.throttle, s3 = void 0 === o3 ? 0 : o3, i3 = t3.throttleKeypresses, n3 = void 0 !== i3 && i3;
              this.throttleKeypresses = n3, this.nativeMode || (this.unbindEventHandlers(), Number.isInteger(s3) && (this.throttle = s3), this.bindEventHandlers());
            }, e3.prototype.destroy = function() {
              this.enabled && (this.enabled = false, this.nativeMode = false, this.throttle = 0, this.throttleKeypresses = false, this.focusKey = null, this.parentsHavingFocusedChild = [], this.focusableComponents = {}, this.paused = false, this.keyMap = L, this.unbindEventHandlers());
            }, e3.prototype.getEventType = function(e4) {
              return (0, f2.default)(this.getKeyMap(), function(t3) {
                return t3.includes(e4);
              });
            }, e3.getKeyCode = function(e4) {
              return e4.keyCode || e4.code || e4.key;
            }, e3.prototype.bindEventHandlers = function() {
              var t3 = this;
              "undefined" != typeof window && window.addEventListener && (this.keyDownEventListener = function(o3) {
                if (true !== t3.paused) {
                  t3.debug && (t3.logIndex += 1);
                  var s3 = e3.getKeyCode(o3), i3 = t3.getEventType(s3);
                  if (i3) {
                    t3.pressedKeys[i3] = t3.pressedKeys[i3] ? t3.pressedKeys[i3] + 1 : 1, t3.shouldUseNativeEvents || (o3.preventDefault(), o3.stopPropagation());
                    var n3 = { pressedKeys: t3.pressedKeys };
                    if (i3 === D && t3.focusKey) t3.onEnterPress(n3);
                    else {
                      var r3 = false === t3.onArrowPress(i3, n3);
                      if (t3.visualDebugger && t3.visualDebugger.clear(), r3) t3.log("keyDownEventListener", "default navigation prevented");
                      else {
                        var a3 = (0, f2.default)(t3.getKeyMap(), function(e4) {
                          return e4.includes(s3);
                        });
                        t3.smartNavigate(a3, null, { event: o3 });
                      }
                    }
                  }
                }
              }, this.throttle && (this.keyDownEventListenerThrottled = (0, b.default)(this.keyDownEventListener.bind(this), this.throttle, R)), this.keyUpEventListener = function(o3) {
                var s3 = e3.getKeyCode(o3), i3 = t3.getEventType(s3);
                delete t3.pressedKeys[i3], t3.throttle && !t3.throttleKeypresses && t3.keyDownEventListenerThrottled.cancel(), i3 === D && t3.focusKey && t3.onEnterRelease(), !t3.focusKey || i3 !== K && i3 !== w && i3 !== x && i3 !== E || t3.onArrowRelease(i3);
              }, window.addEventListener("keyup", this.keyUpEventListener), window.addEventListener("keydown", this.throttle ? this.keyDownEventListenerThrottled : this.keyDownEventListener));
            }, e3.prototype.unbindEventHandlers = function() {
              if ("undefined" != typeof window && window.removeEventListener) {
                window.removeEventListener("keyup", this.keyUpEventListener), this.keyUpEventListener = null;
                var e4 = this.throttle ? this.keyDownEventListenerThrottled : this.keyDownEventListener;
                window.removeEventListener("keydown", e4), this.keyDownEventListener = null;
              }
            }, e3.prototype.onEnterPress = function(e4) {
              var t3 = this.focusableComponents[this.focusKey];
              t3 ? t3.focusable ? t3.onEnterPress && t3.onEnterPress(e4) : this.log("onEnterPress", "componentNotFocusable") : this.log("onEnterPress", "noComponent");
            }, e3.prototype.onEnterRelease = function() {
              var e4 = this.focusableComponents[this.focusKey];
              e4 ? e4.focusable ? e4.onEnterRelease && e4.onEnterRelease() : this.log("onEnterRelease", "componentNotFocusable") : this.log("onEnterRelease", "noComponent");
            }, e3.prototype.onArrowPress = function(e4, t3) {
              var o3 = this.focusableComponents[this.focusKey];
              if (o3) return o3 && o3.onArrowPress && o3.onArrowPress(e4, t3);
              this.log("onArrowPress", "noComponent");
            }, e3.prototype.onArrowRelease = function(e4) {
              var t3 = this.focusableComponents[this.focusKey];
              t3 ? t3.focusable ? t3.onArrowRelease && t3.onArrowRelease(e4) : this.log("onArrowRelease", "componentNotFocusable") : this.log("onArrowRelease", "noComponent");
            }, e3.prototype.navigateByDirection = function(e4, t3) {
              if (true !== this.paused && this.enabled && !this.nativeMode) {
                var o3 = [E, x, K, w];
                o3.includes(e4) ? (this.log("navigateByDirection", "direction", e4), this.smartNavigate(e4, null, t3)) : this.log("navigateByDirection", "Invalid direction. You passed: `".concat(e4, "`, but you can use only these: "), o3);
              }
            }, e3.prototype.smartNavigate = function(t3, o3, s3) {
              var i3 = this;
              if (!this.nativeMode) {
                var n3 = t3 === E || t3 === x, r3 = t3 === E || (this.writingDirection === C.default.LTR ? t3 === w : t3 === K);
                this.log("smartNavigate", "direction", t3), this.log("smartNavigate", "fromParentFocusKey", o3), this.log("smartNavigate", "this.focusKey", this.focusKey), o3 || (0, v.default)(this.focusableComponents, function(e4) {
                  e4.layoutUpdated = false;
                });
                var a3 = this.focusableComponents[o3 || this.focusKey];
                if (o3 || a3) {
                  if (this.log("smartNavigate", "currentComponent", a3 ? a3.focusKey : void 0, a3 ? a3.node : void 0, a3), a3) {
                    this.updateLayout(a3.focusKey);
                    var u3 = a3.parentFocusKey, c3 = a3.focusKey, l3 = a3.layout, d3 = e3.getCutoffCoordinate(n3, r3, false, l3, this.writingDirection), f3 = (0, h2.default)(this.focusableComponents, function(t4) {
                      if (t4.parentFocusKey === u3 && t4.focusable) {
                        i3.updateLayout(t4.focusKey);
                        var o4 = e3.getCutoffCoordinate(n3, r3, true, t4.layout, i3.writingDirection);
                        return n3 || i3.writingDirection === C.default.LTR ? r3 ? o4 >= d3 : o4 <= d3 : r3 ? o4 <= d3 : o4 >= d3;
                      }
                      return false;
                    });
                    if (this.debug && (this.log("smartNavigate", "currentCutoffCoordinate", d3), this.log("smartNavigate", "siblings", "".concat(f3.length, " elements:"), f3.map(function(e4) {
                      return e4.focusKey;
                    }).join(", "), f3.map(function(e4) {
                      return e4.node;
                    }), f3.map(function(e4) {
                      return e4;
                    }))), this.visualDebugger) {
                      var y2 = e3.getRefCorners(t3, false, l3);
                      this.visualDebugger.drawPoint(y2.a.x, y2.a.y), this.visualDebugger.drawPoint(y2.b.x, y2.b.y);
                    }
                    var g2 = this.sortSiblingsByPriority(f3, l3, t3, c3), b2 = (0, p.default)(g2);
                    if (this.log("smartNavigate", "nextComponent", b2 ? b2.focusKey : void 0, b2 ? b2.node : void 0, b2), b2) this.setFocus(b2.focusKey, s3);
                    else {
                      var F2 = this.focusableComponents[u3], m2 = (null == F2 ? void 0 : F2.isFocusBoundary) ? F2.focusBoundaryDirections || [t3] : [];
                      F2 && m2.includes(t3) || this.smartNavigate(t3, u3, s3);
                    }
                  }
                } else this.setFocus(this.getForcedFocusKey());
              }
            }, e3.prototype.saveLastFocusedChildKey = function(e4, t3) {
              e4 && (this.log("saveLastFocusedChildKey", "".concat(e4.focusKey, " lastFocusedChildKey set"), t3), e4.lastFocusedChildKey = t3);
            }, e3.prototype.log = function(e4, t3) {
              for (var o3 = [], s3 = 2; s3 < arguments.length; s3++) o3[s3 - 2] = arguments[s3];
              this.debug && console.log.apply(console, u2(["%c".concat(e4, "%c").concat(t3), "background: ".concat(M[this.logIndex % M.length], "; color: black; padding: 1px 5px;"), "background: #333; color: #BADA55; padding: 1px 5px;"], o3, false));
            }, e3.prototype.getCurrentFocusKey = function() {
              return this.focusKey;
            }, e3.prototype.getForcedFocusKey = function() {
              var e4, o3 = (0, h2.default)(this.focusableComponents, function(e5) {
                return e5.focusable && e5.forceFocus;
              }), s3 = this.sortSiblingsByPriority(o3, { x: 0, y: 0, width: 0, height: 0, left: 0, top: 0, right: 0, bottom: 0, node: null }, "down", t2.ROOT_FOCUS_KEY);
              return null === (e4 = (0, p.default)(s3)) || void 0 === e4 ? void 0 : e4.focusKey;
            }, e3.prototype.getNextFocusKey = function(e4) {
              var t3 = this, o3 = this.focusableComponents[e4];
              if (!o3 || this.nativeMode) return e4;
              var s3 = (0, h2.default)(this.focusableComponents, function(t4) {
                return t4.parentFocusKey === e4 && t4.focusable;
              });
              if (s3.length > 0) {
                var i3 = o3.lastFocusedChildKey, n3 = o3.preferredChildFocusKey;
                if (this.log("getNextFocusKey", "lastFocusedChildKey is", i3), this.log("getNextFocusKey", "preferredChildFocusKey is", n3), i3 && o3.saveLastFocusedChild && this.isParticipatingFocusableComponent(i3)) return this.log("getNextFocusKey", "lastFocusedChildKey will be focused", i3), this.getNextFocusKey(i3);
                if (n3 && this.isParticipatingFocusableComponent(n3)) return this.log("getNextFocusKey", "preferredChildFocusKey will be focused", n3), this.getNextFocusKey(n3);
                s3.forEach(function(e5) {
                  return t3.updateLayout(e5.focusKey);
                });
                var r3 = function(e5, t4) {
                  var o4 = t4 === C.default.LTR ? function(e6) {
                    var t5 = e6.layout;
                    return Math.abs(t5.left) + Math.abs(t5.top);
                  } : function(e6) {
                    var t5 = e6.layout;
                    return Math.abs(window.innerWidth - t5.right) + Math.abs(t5.top);
                  }, s4 = (0, g.default)(e5, o4);
                  return (0, p.default)(s4);
                }(s3, this.writingDirection).focusKey;
                return this.log("getNextFocusKey", "childKey will be focused", r3), this.getNextFocusKey(r3);
              }
              return this.log("getNextFocusKey", "targetFocusKey", e4), e4;
            }, e3.prototype.addFocusable = function(e4) {
              var t3 = e4.focusKey, o3 = e4.node, s3 = e4.parentFocusKey, i3 = e4.onEnterPress, n3 = e4.onEnterRelease, r3 = e4.onArrowPress, a3 = e4.onArrowRelease, u3 = e4.onFocus, c3 = e4.onBlur, l3 = e4.saveLastFocusedChild, d3 = e4.trackChildren, h3 = e4.onUpdateFocus, f3 = e4.onUpdateHasFocusedChild, p2 = e4.preferredChildFocusKey, y2 = e4.autoRestoreFocus, v2 = e4.forceFocus, g2 = e4.focusable, b2 = e4.isFocusBoundary, F2 = e4.focusBoundaryDirections;
              if (this.focusableComponents[t3] = { focusKey: t3, node: o3, parentFocusKey: s3, onEnterPress: i3, onEnterRelease: n3, onArrowPress: r3, onArrowRelease: a3, onFocus: u3, onBlur: c3, onUpdateFocus: h3, onUpdateHasFocusedChild: f3, saveLastFocusedChild: l3, trackChildren: d3, preferredChildFocusKey: p2, focusable: g2, isFocusBoundary: b2, focusBoundaryDirections: F2, autoRestoreFocus: y2, forceFocus: v2, lastFocusedChildKey: null, layout: { x: 0, y: 0, width: 0, height: 0, left: 0, top: 0, right: 0, bottom: 0, node: o3 }, layoutUpdated: false }, o3 || console.warn('Component added without a node reference. This will result in its coordinates being empty and may cause lost focus. Check the "ref" passed to "useFocusable": ', this.focusableComponents[t3]), !this.nativeMode) {
                this.updateLayout(t3), this.log("addFocusable", "Component added: ", this.focusableComponents[t3]), t3 === this.focusKey && this.setFocus(p2 || t3);
                for (var C2 = this.focusableComponents[this.focusKey]; C2; ) {
                  if (C2.parentFocusKey === t3) {
                    this.updateParentsHasFocusedChild(this.focusKey, {}), this.updateParentsLastFocusedChild(this.focusKey);
                    break;
                  }
                  C2 = this.focusableComponents[C2.parentFocusKey];
                }
              }
            }, e3.prototype.removeFocusable = function(e4) {
              var t3 = e4.focusKey, o3 = this.focusableComponents[t3];
              if (o3) {
                var s3 = o3.parentFocusKey;
                (0, o3.onUpdateFocus)(false), this.log("removeFocusable", "Component removed: ", o3), delete this.focusableComponents[t3];
                var i3 = this.parentsHavingFocusedChild.includes(t3);
                this.parentsHavingFocusedChild = this.parentsHavingFocusedChild.filter(function(e5) {
                  return e5 !== t3;
                });
                var n3 = this.focusableComponents[s3], r3 = t3 === this.focusKey;
                if (n3 && n3.lastFocusedChildKey === t3 && (n3.lastFocusedChildKey = null), this.nativeMode) return;
                (r3 || i3) && n3 && n3.autoRestoreFocus && (this.log("removeFocusable", "Component removed: ", r3 ? "Leaf component" : "Container component", "Auto restoring focus to: ", s3), this.setFocusDebounced(s3));
              }
            }, e3.prototype.getNodeLayoutByFocusKey = function(e4) {
              var t3 = this.focusableComponents[e4];
              return t3 ? (this.updateLayout(t3.focusKey), t3.layout) : null;
            }, e3.prototype.setCurrentFocusedKey = function(e4, t3) {
              var o3, s3, i3, n3;
              if (this.isFocusableComponent(this.focusKey) && e4 !== this.focusKey) {
                var r3 = this.focusableComponents[this.focusKey];
                r3.onUpdateFocus(false), r3.onBlur(this.getNodeLayoutByFocusKey(this.focusKey), t3), null === (s3 = null === (o3 = r3.node) || void 0 === o3 ? void 0 : o3.removeAttribute) || void 0 === s3 || s3.call(o3, "data-focused"), this.log("setCurrentFocusedKey", "onBlur", r3);
              }
              if (this.focusKey = e4, this.isFocusableComponent(this.focusKey)) {
                var a3 = this.focusableComponents[this.focusKey];
                this.shouldFocusDOMNode && a3.node && a3.node.focus(this.domNodeFocusOptions), null === (n3 = null === (i3 = a3.node) || void 0 === i3 ? void 0 : i3.setAttribute) || void 0 === n3 || n3.call(i3, "data-focused", "true"), a3.onUpdateFocus(true), a3.onFocus(this.getNodeLayoutByFocusKey(this.focusKey), t3), this.log("setCurrentFocusedKey", "onFocus", a3);
              }
            }, e3.prototype.updateParentsHasFocusedChild = function(e4, t3) {
              for (var o3 = this, s3 = [], i3 = this.focusableComponents[e4]; i3; ) {
                var n3 = i3.parentFocusKey, r3 = this.focusableComponents[n3];
                if (r3) {
                  var a3 = r3.focusKey;
                  s3.push(a3);
                }
                i3 = r3;
              }
              var u3 = (0, d2.default)(this.parentsHavingFocusedChild, s3), c3 = (0, d2.default)(s3, this.parentsHavingFocusedChild);
              (0, y.default)(u3, function(e5) {
                var s4 = o3.focusableComponents[e5];
                s4 && s4.trackChildren && s4.onUpdateHasFocusedChild(false), o3.onIntermediateNodeBecameBlurred(e5, t3);
              }), (0, y.default)(c3, function(e5) {
                var s4 = o3.focusableComponents[e5];
                s4 && s4.trackChildren && s4.onUpdateHasFocusedChild(true), o3.onIntermediateNodeBecameFocused(e5, t3);
              }), this.parentsHavingFocusedChild = s3;
            }, e3.prototype.updateParentsLastFocusedChild = function(e4) {
              for (var t3 = this.focusableComponents[e4]; t3; ) {
                var o3 = t3.parentFocusKey, s3 = this.focusableComponents[o3];
                s3 && this.saveLastFocusedChildKey(s3, t3.focusKey), t3 = s3;
              }
            }, e3.prototype.getKeyMap = function() {
              return this.keyMap;
            }, e3.prototype.setKeyMap = function(e4) {
              this.keyMap = i2(i2({}, this.getKeyMap()), function(e5) {
                var t3 = {};
                return Object.entries(e5).forEach(function(e6) {
                  var o3 = e6[0], s3 = e6[1];
                  t3[o3] = Array.isArray(s3) ? s3 : [s3];
                }), t3;
              }(e4));
            }, e3.prototype.isFocusableComponent = function(e4) {
              return !!this.focusableComponents[e4];
            }, e3.prototype.isParticipatingFocusableComponent = function(e4) {
              return this.isFocusableComponent(e4) && this.focusableComponents[e4].focusable;
            }, e3.prototype.onIntermediateNodeBecameFocused = function(e4, t3) {
              this.isParticipatingFocusableComponent(e4) && this.focusableComponents[e4].onFocus(this.getNodeLayoutByFocusKey(e4), t3);
            }, e3.prototype.onIntermediateNodeBecameBlurred = function(e4, t3) {
              this.isParticipatingFocusableComponent(e4) && this.focusableComponents[e4].onBlur(this.getNodeLayoutByFocusKey(e4), t3);
            }, e3.prototype.pause = function() {
              this.paused = true;
            }, e3.prototype.resume = function() {
              this.paused = false;
            }, e3.prototype.setFocus = function(e4, o3) {
              if (void 0 === o3 && (o3 = {}), this.setFocusDebounced.cancel(), this.enabled) {
                this.log("setFocus", "focusKey", e4), e4 && e4 !== t2.ROOT_FOCUS_KEY || (e4 = this.getForcedFocusKey());
                var s3 = this.getNextFocusKey(e4);
                this.log("setFocus", "newFocusKey", s3), this.setCurrentFocusedKey(s3, o3), this.updateParentsHasFocusedChild(s3, o3), this.updateParentsLastFocusedChild(s3);
              }
            }, e3.prototype.updateAllLayouts = function() {
              var e4 = this;
              this.enabled && !this.nativeMode && (0, v.default)(this.focusableComponents, function(t3, o3) {
                e4.updateLayout(o3);
              });
            }, e3.prototype.updateLayout = function(e4) {
              var t3 = this.focusableComponents[e4];
              if (t3 && !this.nativeMode && !t3.layoutUpdated) {
                var o3 = t3.node, s3 = this.useGetBoundingClientRect ? (0, m.getBoundingClientRect)(o3) : (0, m.default)(o3);
                t3.layout = i2(i2({}, s3), { node: o3 });
              }
            }, e3.prototype.updateFocusable = function(e4, t3) {
              var o3 = t3.node, s3 = t3.preferredChildFocusKey, i3 = t3.focusable, n3 = t3.isFocusBoundary, r3 = t3.focusBoundaryDirections, a3 = t3.onEnterPress, u3 = t3.onEnterRelease, c3 = t3.onArrowPress, l3 = t3.onFocus, d3 = t3.onBlur;
              if (!this.nativeMode) {
                var h3 = this.focusableComponents[e4];
                h3 && (h3.preferredChildFocusKey = s3, h3.focusable = i3, h3.isFocusBoundary = n3, h3.focusBoundaryDirections = r3, h3.onEnterPress = a3, h3.onEnterRelease = u3, h3.onArrowPress = c3, h3.onFocus = l3, h3.onBlur = d3, o3 && (h3.node = o3));
              }
            }, e3.prototype.isNativeMode = function() {
              return this.nativeMode;
            }, e3.prototype.doesFocusableExist = function(e4) {
              return !!this.focusableComponents[e4];
            }, e3.prototype.updateRtl = function(e4) {
              this.writingDirection = e4 ? C.default.RTL : C.default.LTR;
            }, e3;
          }();
          t2.SpatialNavigation = new N(), t2.init = t2.SpatialNavigation.init, t2.setThrottle = t2.SpatialNavigation.setThrottle, t2.destroy = t2.SpatialNavigation.destroy, t2.setKeyMap = t2.SpatialNavigation.setKeyMap, t2.setFocus = t2.SpatialNavigation.setFocus, t2.navigateByDirection = t2.SpatialNavigation.navigateByDirection, t2.pause = t2.SpatialNavigation.pause, t2.resume = t2.SpatialNavigation.resume, t2.updateAllLayouts = t2.SpatialNavigation.updateAllLayouts, t2.getCurrentFocusKey = t2.SpatialNavigation.getCurrentFocusKey, t2.doesFocusableExist = t2.SpatialNavigation.doesFocusableExist, t2.updateRtl = t2.SpatialNavigation.updateRtl;
        }, 35: function(e2, t2, o2) {
          var s2 = this && this.__importDefault || function(e3) {
            return e3 && e3.__esModule ? e3 : { default: e3 };
          };
          Object.defineProperty(t2, "__esModule", { value: true });
          var i2 = s2(o2(119)), n2 = "undefined" != typeof window && window.document, r2 = n2 ? window.innerWidth : 0, a2 = n2 ? window.innerHeight : 0, u2 = function() {
            function e3(t3) {
              n2 && (this.debugCtx = e3.createCanvas("sn-debug", "1010", t3), this.layoutsCtx = e3.createCanvas("sn-layouts", "1000", t3), this.writingDirection = t3);
            }
            return e3.createCanvas = function(e4, t3, o3) {
              var s3 = document.querySelector("#".concat(e4)) || document.createElement("canvas");
              s3.setAttribute("id", e4), s3.setAttribute("dir", o3 === i2.default.LTR ? "ltr" : "rtl");
              var n3 = s3.getContext("2d");
              return s3.style.zIndex = t3, s3.style.position = "fixed", s3.style.top = "0", s3.style.left = "0", document.body.appendChild(s3), s3.width = r2, s3.height = a2, n3;
            }, e3.prototype.clear = function() {
              n2 && this.debugCtx.clearRect(0, 0, r2, a2);
            }, e3.prototype.clearLayouts = function() {
              n2 && this.layoutsCtx.clearRect(0, 0, r2, a2);
            }, e3.prototype.drawLayout = function(e4, t3, o3) {
              if (n2) {
                this.layoutsCtx.strokeStyle = "green", this.layoutsCtx.strokeRect(e4.left, e4.top, e4.width, e4.height), this.layoutsCtx.font = "8px monospace", this.layoutsCtx.fillStyle = "red";
                var s3 = this.writingDirection === i2.default.LTR ? "left" : "right", r3 = e4[s3];
                this.layoutsCtx.fillText(t3, r3, e4.top + 10), this.layoutsCtx.fillText(o3, r3, e4.top + 25), this.layoutsCtx.fillText("".concat(s3, ": ").concat(r3), r3, e4.top + 40), this.layoutsCtx.fillText("top: ".concat(e4.top), r3, e4.top + 55);
              }
            }, e3.prototype.drawPoint = function(e4, t3, o3, s3) {
              void 0 === o3 && (o3 = "blue"), void 0 === s3 && (s3 = 10), n2 && (this.debugCtx.strokeStyle = o3, this.debugCtx.lineWidth = 3, this.debugCtx.strokeRect(e4 - s3 / 2, t3 - s3 / 2, s3, s3));
            }, e3;
          }();
          t2.default = u2;
        }, 119: function(e2, t2) {
          var o2;
          Object.defineProperty(t2, "__esModule", { value: true }), function(e3) {
            e3[e3.LTR = 0] = "LTR", e3[e3.RTL = 1] = "RTL";
          }(o2 || (o2 = {})), t2.default = o2;
        }, 607: function(e2, t2, o2) {
          var s2 = this && this.__createBinding || (Object.create ? function(e3, t3, o3, s3) {
            void 0 === s3 && (s3 = o3);
            var i3 = Object.getOwnPropertyDescriptor(t3, o3);
            i3 && !("get" in i3 ? !t3.__esModule : i3.writable || i3.configurable) || (i3 = { enumerable: true, get: function() {
              return t3[o3];
            } }), Object.defineProperty(e3, s3, i3);
          } : function(e3, t3, o3, s3) {
            void 0 === s3 && (s3 = o3), e3[s3] = t3[o3];
          }), i2 = this && this.__exportStar || function(e3, t3) {
            for (var o3 in e3) "default" === o3 || Object.prototype.hasOwnProperty.call(t3, o3) || s2(t3, e3, o3);
          };
          Object.defineProperty(t2, "__esModule", { value: true }), i2(o2(79), t2), i2(o2(445), t2), i2(o2(654), t2);
        }, 964: function(e2, t2) {
          Object.defineProperty(t2, "__esModule", { value: true }), t2.getBoundingClientRect = void 0;
          var o2 = function(e3) {
            for (var t3 = e3.offsetParent, o3 = e3.offsetHeight, s2 = e3.offsetWidth, i2 = e3.offsetLeft, n2 = e3.offsetTop; t3 && 1 === t3.nodeType; ) i2 += t3.offsetLeft - t3.scrollLeft, n2 += t3.offsetTop - t3.scrollTop, t3 = t3.offsetParent;
            return { height: o3, left: i2, top: n2, width: s2 };
          };
          t2.default = function(e3) {
            var t3 = e3 && e3.parentElement;
            if (e3 && t3) {
              var s2 = o2(t3), i2 = o2(e3), n2 = i2.height, r2 = i2.left, a2 = i2.top, u2 = i2.width;
              return { x: r2 - s2.left, y: a2 - s2.top, width: u2, height: n2, left: r2, top: a2, get right() {
                return this.left + this.width;
              }, get bottom() {
                return this.top + this.height;
              } };
            }
            return { x: 0, y: 0, width: 0, height: 0, left: 0, top: 0, right: 0, bottom: 0 };
          }, t2.getBoundingClientRect = function(e3) {
            if (e3 && e3.getBoundingClientRect) {
              var t3 = e3.getBoundingClientRect();
              return { x: t3.x, y: t3.y, width: t3.width, height: t3.height, left: t3.left, top: t3.top, get right() {
                return this.left + this.width;
              }, get bottom() {
                return this.top + this.height;
              } };
            }
            return { x: 0, y: 0, width: 0, height: 0, left: 0, top: 0, right: 0, bottom: 0 };
          };
        }, 445: function(e2, t2, o2) {
          Object.defineProperty(t2, "__esModule", { value: true }), t2.useFocusContext = t2.FocusContext = void 0;
          var s2 = o2(156), i2 = o2(654);
          t2.FocusContext = (0, s2.createContext)(i2.ROOT_FOCUS_KEY), t2.FocusContext.displayName = "FocusContext", t2.useFocusContext = function() {
            return (0, s2.useContext)(t2.FocusContext);
          };
        }, 79: function(e2, t2, o2) {
          var s2 = this && this.__importDefault || function(e3) {
            return e3 && e3.__esModule ? e3 : { default: e3 };
          };
          Object.defineProperty(t2, "__esModule", { value: true }), t2.useFocusable = void 0;
          var i2 = o2(156), n2 = s2(o2(604)), r2 = s2(o2(461)), a2 = o2(654), u2 = o2(445);
          t2.useFocusable = function(e3) {
            var t3 = void 0 === e3 ? {} : e3, o3 = t3.focusable, s3 = void 0 === o3 || o3, c2 = t3.saveLastFocusedChild, l2 = void 0 === c2 || c2, d2 = t3.trackChildren, h2 = void 0 !== d2 && d2, f2 = t3.autoRestoreFocus, p = void 0 === f2 || f2, y = t3.forceFocus, v = void 0 !== y && y, g = t3.isFocusBoundary, b = void 0 !== g && g, F = t3.focusBoundaryDirections, C = t3.focusKey, m = t3.preferredChildFocusKey, K = t3.onEnterPress, w = void 0 === K ? n2.default : K, x = t3.onEnterRelease, E = void 0 === x ? n2.default : x, D = t3.onArrowPress, L = void 0 === D ? function() {
              return true;
            } : D, M = t3.onArrowRelease, R = void 0 === M ? n2.default : M, N = t3.onFocus, P = void 0 === N ? n2.default : N, B = t3.onBlur, _ = void 0 === B ? n2.default : B, A = t3.extraProps, O = (0, i2.useCallback)(function(e4) {
              w(A, e4);
            }, [w, A]), k = (0, i2.useCallback)(function() {
              E(A);
            }, [E, A]), T = (0, i2.useCallback)(function(e4, t4) {
              return L(e4, A, t4);
            }, [A, L]), S = (0, i2.useCallback)(function(e4) {
              R(e4, A);
            }, [R, A]), q = (0, i2.useCallback)(function(e4, t4) {
              P(e4, A, t4);
            }, [A, P]), U = (0, i2.useCallback)(function(e4, t4) {
              _(e4, A, t4);
            }, [A, _]), j = (0, i2.useRef)(null), H = (0, i2.useState)(false), I = H[0], Y = H[1], G = (0, i2.useState)(false), W = G[0], z = G[1], J = (0, u2.useFocusContext)(), Q = (0, i2.useMemo)(function() {
              return C || (0, r2.default)("sn:focusable-item-");
            }, [C]), V = (0, i2.useCallback)(function(e4) {
              void 0 === e4 && (e4 = {}), a2.SpatialNavigation.setFocus(Q, e4);
            }, [Q]);
            return (0, i2.useEffect)(function() {
              var e4 = j.current;
              return a2.SpatialNavigation.addFocusable({ focusKey: Q, node: e4, parentFocusKey: J, preferredChildFocusKey: m, onEnterPress: O, onEnterRelease: k, onArrowPress: T, onArrowRelease: S, onFocus: q, onBlur: U, onUpdateFocus: function(e5) {
                return void 0 === e5 && (e5 = false), Y(e5);
              }, onUpdateHasFocusedChild: function(e5) {
                return void 0 === e5 && (e5 = false), z(e5);
              }, saveLastFocusedChild: l2, trackChildren: h2, isFocusBoundary: b, focusBoundaryDirections: F, autoRestoreFocus: p, forceFocus: v, focusable: s3 }), function() {
                a2.SpatialNavigation.removeFocusable({ focusKey: Q });
              };
            }, []), (0, i2.useEffect)(function() {
              var e4 = j.current;
              a2.SpatialNavigation.updateFocusable(Q, { node: e4, preferredChildFocusKey: m, focusable: s3, isFocusBoundary: b, focusBoundaryDirections: F, onEnterPress: O, onEnterRelease: k, onArrowPress: T, onArrowRelease: S, onFocus: q, onBlur: U });
            }, [Q, m, s3, b, F, O, k, T, S, q, U]), { ref: j, focusSelf: V, focused: I, hasFocusedChild: W, focusKey: Q };
          };
        }, 150: function(t2) {
          t2.exports = e;
        }, 117: function(e2) {
          e2.exports = t;
        }, 747: function(e2) {
          e2.exports = o;
        }, 23: function(e2) {
          e2.exports = s;
        }, 842: function(e2) {
          e2.exports = i;
        }, 682: function(e2) {
          e2.exports = n;
        }, 784: function(e2) {
          e2.exports = r;
        }, 604: function(e2) {
          e2.exports = a;
        }, 432: function(e2) {
          e2.exports = u;
        }, 67: function(e2) {
          e2.exports = c;
        }, 461: function(e2) {
          e2.exports = l;
        }, 156: function(e2) {
          e2.exports = d;
        } }, f = {};
        return function e2(t2) {
          var o2 = f[t2];
          if (void 0 !== o2) return o2.exports;
          var s2 = f[t2] = { exports: {} };
          return h[t2].call(s2.exports, s2, s2.exports, e2), s2.exports;
        }(607);
      }();
    });
  }
});
export default require_dist();
//# sourceMappingURL=@noriginmedia_norigin-spatial-navigation.js.map
